#!/usr/bin/env php
<?php

declare(strict_types=1);

use Phel\Api\ApiFacade;
use Phel\Console\ConsoleFacade;
use Phel\Console\Infrastructure\ConsoleBootstrap;

// NOTE: When packaged as a PHAR, the stub requires the PHAR's vendor/autoload.php.
// Avoid loading any *host* Composer autoloader to prevent conflicts.
(static function (): void {
    $runningInPhar = \Phar::running() !== '';

    $appRootDir = null;

    if ($runningInPhar) {
        // We're inside phel.phar. Autoload is already in place (from the stub).
        // For app root, prefer the current working directory (the user's project).
        $appRootDir = getcwd() ?: __DIR__;
    } else {
        // Source checkout: find and load the host Composer autoloader.
        $appRootDir = (static function (): ?string {
            $dir = getcwd();
            while (is_dir($dir)) {
                $autoload = $dir . '/vendor/autoload.php';
                if (is_file($autoload)) {
                    require_once $autoload;
                    return $dir;
                }
                $parent = dirname($dir);
                if ($parent === $dir) {
                    break;
                }
                $dir = $parent;
            }

            foreach ([
                         [__DIR__, '/../vendor/autoload.php'],
                         [__DIR__, '/../../vendor/autoload.php'],
                         [__DIR__, '/../../../autoload.php'],
                     ] as $files) {
                $file = sprintf('%s%s', ...$files);
                if (is_file($file)) {
                    require_once $file;
                    return $files[0];
                }
            }

            return null;
        })();
    }

    if ($appRootDir === null) {
        fwrite(
            STDERR,
            'You must set up the project dependencies, run the following commands:' . PHP_EOL .
            'curl -s https://getcomposer.org/installer | php' . PHP_EOL .
            'php composer.phar install' . PHP_EOL,
        );
        exit(1);
    }

    // Phel classes are available either via the PHAR autoloader (in PHAR mode)
    // or the host Composer autoloader (source mode).
    Phel::bootstrap($appRootDir);

    $facade = new ConsoleFacade();
    $facade->runConsole();
})();
